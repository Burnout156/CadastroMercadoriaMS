@model IEnumerable<CadastroMercadoriaBiblioteca.Models.Mercadoria>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumeroRegistro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fabricante)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoDescricao)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroRegistro)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fabricante)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoDescricao)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="container">
    <h1>Gráfico de Entrada/Saída de Mercadorias</h1>
    <canvas id="myChart"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1"></script>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');

        var chartData = {
            labels: [],
            datasets: []
        };

        fetch('/Estoque/GetChartData')
            .then(response => response.json())
            .then(data => {
                chartData.labels = data.map(d => d.label);

                var entradas = {
                    label: "Entradas",
                    data: data.map(d => d.entrada),
                    backgroundColor: "rgba(54, 162, 235, 0.2)",
                    borderColor: "rgba(54, 162, 235, 1)",
                    borderWidth: 1
                };

                var saidas = {
                    label: "Saídas",
                    data: data.map(d => d.saida),
                    backgroundColor: "rgba(255, 99, 132, 0.2)",
                    borderColor: "rgba(255, 99, 132, 1)",
                    borderWidth: 1
                };

                chartData.datasets.push(entradas, saidas);

                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: chartData,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
    </script>
}
}
